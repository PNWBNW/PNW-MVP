name: Deploy to Aleo Testnet

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 40  # Increase time to allow source build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install System Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tar curl unzip build-essential

      - name: Install Rust & Cargo
        run: |
          rustc --version || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustc --version

      - name: Download & Extract Leo Source Code
        run: |
          echo "Downloading Leo Source Code..."
          curl -L -o leo-source.tar.gz https://github.com/PNWBNW/PNW_MVP/releases/download/leo-2.4.1/leo-2.4.1.tar.gz
          echo "Extracting Source Code..."
          tar -xzf leo-source.tar.gz
          echo "Extraction complete. Listing extracted files:"
          ls -R

      - name: Build Leo from Source
        run: |
          cd leo-2.4.1
          echo "Building Leo CLI..."
          cargo build --release
          echo "Build complete. Listing output:"
          ls -l target/release
          echo "Moving Leo binary to /usr/local/bin..."
          sudo mv target/release/leo /usr/local/bin/leo
          sudo chmod +x /usr/local/bin/leo
          echo "Leo CLI installed successfully!"
          /usr/local/bin/leo --version

      - name: Cache Rust & Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Clean & Build PNW_MVP Project
        run: |
          leo clean
          leo build

      - name: Deploy to Aleo Testnet
        env:
          ALEO_PRIVATE_KEY: ${{ secrets.ALEO_PRIVATE_KEY }}
        run: |
          leo deploy --private-key="${{ secrets.ALEO_PRIVATE_KEY }}" --network testnet

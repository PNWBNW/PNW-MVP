name: Deploy to Aleo Testnet

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Rust & Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust (Only If Not Cached)
        run: |
          rustc --version || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustc --version

      - name: Ensure `wget` and Required Tools Are Installed
        run: sudo apt-get update && sudo apt-get install -y wget tar

      - name: Download and Install Leo 2.4.1
        run: |
          curl -L -o leo.tar.gz https://github.com/PNWBNW/PNW_MVP/releases/download/leo-2.4.1/leo-2.4.1.tar.gz
          file leo.tar.gz
          tar -tzf leo.tar.gz
          sudo tar -xzf leo.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/leo
          /usr/local/bin/leo --version

      - name: Verify Leo Binary Permissions
        run: ls -l /usr/local/bin/leo

      - name: Check Leo Binary Dependencies
        run: ldd /usr/local/bin/leo || echo "ldd not available, skipping dependency check"

      - name: Clean and Build Project
        run: |
          leo clean
          leo build

      - name: Deploy to Aleo Testnet
        env:
          ALEO_PRIVATE_KEY: ${{ secrets.ALEO_PRIVATE_KEY }}
        run: |
          /usr/local/bin/leo deploy --private-key="${{ secrets.ALEO_PRIVATE_KEY }}" --network testnet

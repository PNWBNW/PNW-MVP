name: Deploy to Aleo Testnet

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tar curl unzip

      - name: Download and Install Leo CLI 2.4.1
        run: |
          set -e
          echo "Downloading Leo CLI..."
          curl -L -o leo.tar.gz https://github.com/PNWBNW/PNW_MVP/releases/download/leo-2.4.1/leo-2.4.1.tar.gz
          echo "Download complete."
          
          echo "Extracting Leo CLI..."
          tar -xzf leo.tar.gz
          echo "Extraction complete. Listing extracted files:"
          ls -R
          
          echo "Searching for Leo binary..."
          LEO_PATH=$(find . -type f -name "leo" | head -n 1)
          if [ -z "$LEO_PATH" ]; then
            echo "Error: Leo binary not found!"
            exit 1
          fi
          echo "Found Leo binary at: $LEO_PATH"
          
          echo "Moving Leo binary to /usr/local/bin..."
          sudo mv "$LEO_PATH" /usr/local/bin/leo
          sudo chmod +x /usr/local/bin/leo
          
          echo "Verifying Leo CLI installation..."
          /usr/local/bin/leo --version

      - name: Cache Rust & Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust (If Needed)
        run: |
          rustc --version || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustc --version

      - name: Clean and Build Project
        run: |
          leo clean
          leo build

      - name: Deploy to Aleo Testnet
        env:
          ALEO_PRIVATE_KEY: ${{ secrets.ALEO_PRIVATE_KEY }}
        run: |
          leo deploy --private-key="${{ secrets.ALEO_PRIVATE_KEY }}" --network testnet
